# Generated by Django 2.2.2 on 2019-08-30 05:52

import DjangoUeditor.models
from django.db import migrations, models
import django.db.models.deletion
import quanbenxiaoshuo.storage
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('albums', '0001_initial'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_tab', models.BooleanField(default=False, verbose_name='是否目录')),
                ('name', models.CharField(max_length=255, verbose_name='章节名')),
                ('order', models.SmallIntegerField(blank=True, db_index=True, default=0, help_text='自动递增', verbose_name='排序')),
                ('insert', models.SmallIntegerField(blank=True, default=0, help_text='插入章节order', null=True, verbose_name='插入章节')),
                ('slug', models.SlugField(blank=True, default='', max_length=255, verbose_name='(URL)别名')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '章节',
                'verbose_name_plural': '章节',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Novel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='标题')),
                ('author', models.CharField(max_length=255, verbose_name='作者')),
                ('image', models.ImageField(blank=True, null=True, storage=quanbenxiaoshuo.storage.ImageStorage(), upload_to='novel/%Y/%m', verbose_name='小说封面')),
                ('info', DjangoUeditor.models.UEditorField(default='', verbose_name='简介')),
                ('title', models.CharField(default='', help_text='title', max_length=255, verbose_name='标题(seo)')),
                ('keywords', models.CharField(default='', help_text='keywords', max_length=255, verbose_name='关键字(seo)')),
                ('description', models.CharField(default='', help_text='description', max_length=255, verbose_name='描述(seo)')),
                ('status', models.CharField(choices=[('D', '不公开'), ('P', '公开')], default='D', max_length=1, verbose_name='状态')),
                ('slug', models.SlugField(blank=True, default='', max_length=255, unique=True, verbose_name='(URL)别名')),
                ('is_full', models.BooleanField(default=False, verbose_name='是否完本')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('album', models.ManyToManyField(blank=True, related_name='album_novel', to='albums.Album', verbose_name='专辑')),
                ('category', models.ManyToManyField(blank=True, related_name='category_novel', to='albums.Category', verbose_name='类别')),
                ('tags', taggit.managers.TaggableManager(help_text='多个标签使用,(英文)隔开', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='小说类型')),
            ],
            options={
                'verbose_name': '小说',
                'verbose_name_plural': '小说',
                'ordering': ('-updated_at',),
                'unique_together': {('name', 'author')},
                'index_together': {('status', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='小说内容')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('chapter', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='chapter_content', to='novels.Chapter', verbose_name='小说章节')),
            ],
            options={
                'verbose_name': '小说内容',
                'verbose_name_plural': '小说内容',
            },
        ),
        migrations.AddField(
            model_name='chapter',
            name='novel',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='novel_chapter', to='novels.Novel', verbose_name='小说名称'),
        ),
        migrations.AlterIndexTogether(
            name='chapter',
            index_together={('novel', 'id')},
        ),
    ]
